apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ template "elasticsearch.data.fullname" . }}
  labels:
    app: {{ template "kismatic-logging-efk.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: {{ .Values.elasticsearch.name }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
    role: data
spec:
  serviceName: {{ template "elasticsearch.service.fullname" . }}
  replicas: {{ .Values.elasticsearch.data.replicas }}
  template:
    metadata:
      labels:
        app: {{ template "kismatic-logging-efk.name" . }}
        component: {{ .Values.elasticsearch.name }}
        release: {{ .Release.Name }}
        role: data
      annotations:
      {{- if .Values.elasticsearch.increaseMemMapLimit }}
        pod.beta.kubernetes.io/init-containers: '[
          {
          "name": "sysctl",
            "image": "busybox",
            "imagePullPolicy": "IfNotPresent",
            "command": ["sysctl", "-w", "vm.max_map_count=262144"],
            "securityContext": {
              "privileged": true
            }
          }
        ]'
      {{- end }}
    spec:
      containers:
      - name: es-data
        securityContext:
          privileged: false
          capabilities:
            add:
              - IPC_LOCK
              - SYS_RESOURCE
        image: {{ .Values.elasticsearch.image }}
        imagePullPolicy: Always
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: "CLUSTER_NAME"
          value: "myesdb"
        - name: NODE_MASTER
          value: "false"
        - name: NODE_INGEST
          value: "false"
        - name: HTTP_ENABLE
          value: "false"
        - name: "ES_JAVA_OPTS"
          value: "-Xms256m -Xmx256m"
        - name: "DISCOVERY_SERVICE"
          value: "{{ template "elasticsearch.discovery.fullname" . }}"
        ports:
        - containerPort: 9300
          name: transport
          protocol: TCP
        volumeMounts:
        - name: storage
          mountPath: /data
{{- if .Values.elasticsearch.data.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: storage
      annotations:
        volume.beta.kubernetes.io/storage-class: {{ .Values.elasticsearch.data.persistence.storageClass | quote }}
    spec:
      accessModes: 
        - {{ .Values.elasticsearch.data.persistence.accessMode | quote }}
      resources:
        requests:
          storage: {{ .Values.elasticsearch.data.persistence.size | quote }}
{{- else }}
      volumes:
          - emptyDir:
              medium: ""
            name: "storage"
{{- end }}